// BLOCK
// mixins
// placeholders

// btn

// ELEMENTS
//  __icon
//  __count

// MODIFIERS
// ## Misc ##
// --icon
// --disabled
// --is-toggle (--on) (--disabled)

// ## Themes ##
// --leaf
// --leaf-ghost
// --green-ghost
// --inverted
// --link
// --text
// --text-inverted
// --success

// ## Size ##
// --xxs
// --xs
// --md

// CONTAINER
// -group

// CONTAINER MODIFIERS
// -group--xxs
// -group--xs

// MIXINS
// Se o botão possuir states, ele deverá esconder os elementos internos e
// deverá possuir um conteúdo ::before para segurar a altura do botão.
// @mixin btn--has-state {
//     overflow: hidden;

//     &::before {
//         content: '';
//         display: inline-block;
//         height: 1em;
//         opacity: 0;
//         visibility: hidden;
//         width: 1em;
//     }
// }

// PLACEHOLDERS
%btn-steps {
  @include transition();

  align-items: center;
  bottom: 0;
  display: flex;
  justify-content: center;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 2;
}

.btn {
  $this: &;

  $bg-light: $leaf-40;
  $bg-dark: $leaf-50;
  $bg-hover: $leaf-60;

  @include button;

  background-color: $bg-dark;
  background-image: linear-gradient(to top, $bg-dark, $bg-light);

  border-radius: $radius--md;
  color: $color-white;
  cursor: pointer;
  flex: 0 0 auto;
  padding: 1em 1.5em;
  transition: 200ms;

  @include hover {
    background-color:  $bg-hover;
    background-image: linear-gradient(to top, $bg-hover, $bg-light);
}

// ELEMENTS
&__count {
  font-style: italic;
  opacity: .85;
  margin-left: $distance--xxs;
}

&__icon {
  font-weight: bold;
  margin-right: $distance--xs;
  opacity: .65;
}

// MODIFIERS
&--icon {
  align-items: center;
  align-self: center;
  border-radius: $radius--md;
  display: inline-flex;
  justify-content: center;
  padding: .572em;

  &::before {
    align-items: center;
    display: flex;
    height: 1em;
    justify-content: center;
    width: 1em;
  }

  // SANITIZER
  span {
    display: block;
    outline: 10px solid crimson;
    text-align: center;

    &::before {
      content: 'SPAN DESNECESSÁRIO'
    }
  }
}

&--disabled {
  cursor: not-allowed;
  opacity: .5;
  pointer-events: none;
}

&--is-toggle {
  height: 1rem;
  line-height: 1.25;
  justify-content: flex-start;
  overflow: hidden;
  position: relative;
  text-align: left;

  &:focus,
  &:hover {
    background-color: transparent;
  }

  [class*='__default'] {
    @extend %btn-steps;

    height: 100%;
    position: absolute;
  }

  [class*='__active'],
  [class*='__disabled'] {
    @extend %btn-steps;

    transform: translateY(-100%);
  }

  &--on {
    [class*='__default'] {
      transform: translateY(100%);
    }

    [class*='__active'] {
      transform: translateY(0);
    }
  }

  &--disabled {
    [class*='__default'] {
      transform: translateY(100%);
    }

    [class*='__disabled'] {
      transform: translateY(0);
    }

    &:hover {
      background-color: transparentize($color-black, .85);
      background-image: none;
    }

  }

}




// THEMES
&--leaf {
  background-color: $leaf-40;
  background-image: linear-gradient(to top, $leaf-50, $leaf-40);
  color: $color-white;

  @include hover {
    background-color: $leaf-60;
    background-image: none;
  }

}

&--leaf-ghost {
  background-color: transparent;
  background-image: none;
  border: 1px solid $leaf-40;
  color: $leaf-50;

  @include hover {
    background-color: $leaf-5;
    background-image: none;
  }

}

  &--green-ghost {
    background-color: transparent;
    background-image: none;
    border: 1px solid $green-40;
    color: $green-50;

    @include hover {
      background-color: $green-5;
      background-image: none;
    }

  }

  &--link {
    @include dotted-link;

    &:hover {
      background-color: transparent;
      background-image: none;
    }

  }

  &--text {
    background-color: transparent;
    background-image: none;
    box-shadow: none;
    color: $color-gray--darkest;
    opacity: .75;
    padding: 0;
    text-shadow: none;

    @include hover {
      background-color: transparent;
      background-image: none;
      box-shadow: none;
      opacity: 1;
      transform: translateY(0);
    }

  }

  &--text-inverted {
    background-color: transparent;
    background-image: none;
    box-shadow: none;
    color: $color-white;
    padding: 0;
    text-shadow: none;

    @include hover {
      background-color: transparent;
      background-image: none;
      box-shadow: none;
      opacity: 1;
      transform: translateY(0);
    }

  }

  &--success {
    background-color: saturate(darken($color-success, 6%), 6%);
    background-image: none;

    @include hover {
      background-color: saturate(darken($color-success, 8%), 8%);
      background-image: none;
    }

  }

  // Sizes
  &--xxs {
    font-size: $font-size--xxs * .65;
    letter-spacing: $letter-spacing--xl;
  }

  &--xs {
    font-size: $font-size--xs * .65;
    letter-spacing: $letter-spacing--lg;
  }

  &--md {
    font-size: $font-size--md * .6;
  }

  // Container
  &-group {

    >*:not(:last-child) {
      margin-right: $distance--sm;
    }

    &--xxs {
      >*:not(:last-child) {
        margin-right: $distance--xxs;
      }

    }

    &--xs {
      >*:not(:last-child) {
        margin-right: $distance--xs;
      }

    }

  }

}
